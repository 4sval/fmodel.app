{"version":3,"sources":["utils/AppRoute.js","utils/ScrollReveal.js","layouts/LayoutDefault.js","utils/SectionProps.js","components/elements/ButtonGroup.js","components/elements/Button.js","components/sections/Hero.js","components/sections/partials/SectionHeader.js","components/elements/Image.js","assets/images/FModel_KFmi0mvuMU.png","assets/images/FModel_XTEaiByU7L.png","assets/images/FModel_j4w47k5EEj.png","components/sections/FeaturesSplit.js","components/sections/Testimonial.js","views/Home.js","App.js","serviceWorker.js","index.js"],"names":["AppRoute","Component","component","Layout","layout","rest","undefined","props","children","render","ScrollReveal","React","forwardRef","ref","useState","window","innerHeight","viewportHeight","setViewportheight","revealEl","setRevealel","checkComplete","length","document","querySelectorAll","revealElements","i","el","revealDelay","getAttribute","revealOffset","offset","getBoundingClientRect","top","elementIsVisible","closest","classList","contains","setTimeout","add","useImperativeHandle","init","useEffect","addEventListener","handleScroll","handleResize","handleListeners","removeEventListener","throttle","propTypes","PropTypes","func","isRequired","LayoutDefault","className","SectionShared","types","topOuterDivider","bool","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","defaults","SectionProps","SectionSplitProps","invertMobile","invertDesktop","alignTop","imageFill","SectionTilesProps","pushLeft","ButtonGroup","classes","classNames","Button","tag","color","size","loading","wide","wideMobile","disabled","defaultProps","Hero","outerClasses","innerClasses","href","SectionHeader","data","title","paragraph","Image","src","width","height","alt","loaded","setLoaded","image","useRef","handlePlaceholder","current","img","w","h","placeholder","createElement","style","display","before","opacity","remove","onLoad","FeaturesSplit","splitClasses","mainLayout","audioPlayer","mapViewer","Testimonial","paddingBottom","Home","ReactGA","initialize","process","REACT_APP_GA_CODE","App","childRef","location","useLocation","page","pathname","body","set","pageview","trackPage","exact","path","Boolean","hostname","match","history","createBrowserHistory","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e912b704.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst AppRoute = ({\r\n  component: Component,\r\n  layout: Layout,\r\n  ...rest\r\n}) => {\r\n\r\n  Layout = (Layout === undefined) ? props => (<>{props.children}</>) : Layout;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (\r\n        <Layout>\r\n          <Component {...props} />\r\n        </Layout>\r\n      )} />\r\n  );\r\n}\r\n\r\nexport default AppRoute;","import React, { useState, useEffect, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { throttle } from 'lodash';\r\n\r\nconst ScrollReveal = React.forwardRef((props, ref) => {\r\n\r\n  const [viewportHeight, setViewportheight] = useState(window.innerHeight); \r\n  const [revealEl, setRevealel] = useState([]);\r\n\r\n  const checkComplete = () => {\r\n    return revealEl.length <= document.querySelectorAll('[class*=reveal-].is-revealed').length;\r\n  };\r\n\r\n  const elementIsVisible = (el, offset) => {\r\n    return (el.getBoundingClientRect().top <= viewportHeight - offset);\r\n  };\r\n\r\n  const revealElements = () => {\r\n    if (checkComplete()) return;\r\n    for (let i = 0; i < revealEl.length; i++) {\r\n      let el = revealEl[i];\r\n      let revealDelay = el.getAttribute('data-reveal-delay');\r\n      let revealOffset = (el.getAttribute('data-reveal-offset') ? el.getAttribute('data-reveal-offset') : '200');\r\n      let listenedEl = (el.getAttribute('data-reveal-container') ? el.closest(el.getAttribute('data-reveal-container')) : el);\r\n      if (elementIsVisible(listenedEl, revealOffset) && !el.classList.contains('is-revealed')) {\r\n        if (revealDelay && revealDelay !== 0) {\r\n          setTimeout(function () {\r\n            el.classList.add('is-revealed');\r\n          }, revealDelay);\r\n        } else {\r\n          el.classList.add('is-revealed');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    init() {\r\n      setRevealel(document.querySelectorAll('[class*=reveal-]'));\r\n    }\r\n  }));  \r\n\r\n  useEffect(() => {\r\n    if (typeof revealEl !== 'undefined' && revealEl.length > 0) {\r\n      if (!checkComplete()) {\r\n        window.addEventListener('scroll', handleScroll);\r\n        window.addEventListener('resize', handleResize);\r\n      }\r\n      revealElements();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [revealEl]);\r\n\r\n  const handleListeners = () => {\r\n    if (!checkComplete()) return;\r\n    window.removeEventListener('scroll', handleScroll);\r\n    window.removeEventListener('resize', handleResize);\r\n  };\r\n\r\n  const handleScroll = throttle(() => {\r\n    handleListeners();\r\n    revealElements();\r\n  }, 30);\r\n\r\n  const handleResize = throttle(() => {\r\n    setViewportheight(window.innerHeight);\r\n  }, 30);\r\n\r\n  useEffect(() => {\r\n    handleListeners();\r\n    revealElements();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [viewportHeight]);  \r\n\r\n  return (\r\n    <>\r\n      {props.children()}\r\n    </>\r\n  );\r\n});\r\n\r\nScrollReveal.propTypes = {\r\n  children: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollReveal;","import React from 'react';\r\n\r\nconst LayoutDefault = ({ children }) => (\r\n  <>\r\n    <main className=\"site-content\">\r\n      {children}\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default LayoutDefault;  ","import PropTypes from 'prop-types';\r\n\r\n// Props shared by all sections\r\nconst SectionShared = {\r\n  types: {\r\n    topOuterDivider: PropTypes.bool,\r\n    bottomOuterDivider: PropTypes.bool,    \r\n    topDivider: PropTypes.bool,\r\n    bottomDivider: PropTypes.bool,\r\n    hasBgColor: PropTypes.bool,\r\n    invertColor: PropTypes.bool\r\n  },\r\n  defaults: {\r\n    topOuterDivider: false,\r\n    bottomOuterDivider: false,    \r\n    topDivider: false,\r\n    bottomDivider: false,\r\n    hasBgColor: false,\r\n    invertColor: false\r\n  }\r\n}\r\n\r\n// Default section props\r\nexport const SectionProps = {\r\n  types: {\r\n    ...SectionShared.types\r\n  },\r\n  defaults: {\r\n    ...SectionShared.defaults\r\n  }\r\n}\r\n\r\n// Section split props\r\nexport const SectionSplitProps = {\r\n  types: {\r\n    ...SectionShared.types,\r\n    invertMobile: PropTypes.bool,\r\n    invertDesktop: PropTypes.bool,\r\n    alignTop: PropTypes.bool,\r\n    imageFill: PropTypes.bool\r\n  },\r\n  defaults: {\r\n    ...SectionShared.defaults,\r\n    invertMobile: false,\r\n    invertDesktop: false,\r\n    alignTop: false,\r\n    imageFill: false\r\n  }\r\n}\r\n\r\n// Section tiles props\r\nexport const SectionTilesProps = {\r\n  types: {\r\n    ...SectionShared.types,\r\n    pushLeft: PropTypes.bool\r\n  },\r\n  defaults: {\r\n    ...SectionShared.defaults,\r\n    pushLeft: false\r\n  }\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst ButtonGroup = ({\r\n  className,\r\n  ...props\r\n}) => {\r\n\r\n  const classes = classNames(\r\n    'button-group',\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      className={classes}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ButtonGroup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  tag: PropTypes.elementType,\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  wide: PropTypes.bool,\r\n  wideMobile: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n  tag: 'button',\r\n  color: '',\r\n  size: '',\r\n  loading: false,\r\n  wide: false,\r\n  wideMobile: false,\r\n  disabled: false\r\n}\r\n\r\nconst Button = ({\r\n  className,\r\n  tag,\r\n  color,\r\n  size,\r\n  loading,\r\n  wide,\r\n  wideMobile,\r\n  disabled,\r\n  ...props\r\n}) => {\r\n\r\n  const classes = classNames(\r\n    'button',\r\n    color && `button-${color}`,\r\n    size && `button-${size}`,\r\n    loading && 'is-loading',\r\n    wide && 'button-block',\r\n    wideMobile && 'button-wide-mobile',\r\n    className\r\n  );\r\n\r\n  const Component = tag;\r\n  return (\r\n    <Component\r\n      {...props}\r\n      className={classes}\r\n      disabled={disabled}\r\n    />\r\n  );\r\n}\r\n\r\nButton.propTypes = propTypes;\r\nButton.defaultProps = defaultProps;\r\n\r\nexport default Button;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SectionProps } from '../../utils/SectionProps';\r\nimport ButtonGroup from '../elements/ButtonGroup';\r\nimport Button from '../elements/Button';\r\n\r\nconst propTypes = {\r\n  ...SectionProps.types\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionProps.defaults\r\n}\r\n\r\nconst Hero = ({\r\n  className,\r\n  topOuterDivider,\r\n  bottomOuterDivider,\r\n  topDivider,\r\n  bottomDivider,\r\n  hasBgColor,\r\n  invertColor,\r\n  ...props\r\n}) => {\r\n\r\n  const outerClasses = classNames(\r\n    'hero section center-content',\r\n    topOuterDivider && 'has-top-divider',\r\n    bottomOuterDivider && 'has-bottom-divider',\r\n    hasBgColor && 'has-bg-color',\r\n    invertColor && 'invert-color',\r\n    className\r\n  );\r\n\r\n  const innerClasses = classNames(\r\n    'hero-inner section-inner',\r\n    topDivider && 'has-top-divider',\r\n    bottomDivider && 'has-bottom-divider'\r\n  );\r\n\r\n  return (\r\n    <section {...props} className={outerClasses}>\r\n      <div className=\"container-sm\">\r\n        <div className={innerClasses}>\r\n          <div className=\"hero-content\">\r\n            <h1 className=\"mt-0 mb-16 reveal-from-bottom\" data-reveal-delay=\"200\">\r\n              Open-source software for exploring Unreal Engine games' files\r\n            </h1>\r\n            <div className=\"container-xs\">\r\n              <p className=\"m-0 mb-32 reveal-from-bottom\" data-reveal-delay=\"400\">\r\n                FModel supports tens of file types and asset types, to display the most information possible, with a built-in audio player and model viewer.\r\n              </p>\r\n              <div className=\"reveal-from-bottom\" data-reveal-delay=\"600\">\r\n                <ButtonGroup>\r\n                  <Button tag=\"a\" color=\"primary\" wideMobile href=\"https://fmodel.app/discord\">\r\n                    Join our Discord\r\n                  </Button>\r\n                  <Button tag=\"a\" color=\"secondary\" wideMobile href=\"https://github.com/iAmAsval/FModel/releases/latest/download/FModel.zip\">\r\n                    Download\r\n                  </Button>\r\n                  <Button tag=\"a\" color=\"dark\" wideMobile href=\"https://github.com/iAmAsval/FModel\">\r\n                    View on Github\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nHero.propTypes = propTypes;\r\nHero.defaultProps = defaultProps;\r\n\r\nexport default Hero;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    paragraph: PropTypes.string\r\n  }).isRequired,\r\n  children: PropTypes.node,\r\n  tag: PropTypes.oneOf(['h1', 'h2', 'h3'])\r\n}\r\n\r\nconst defaultProps = {\r\n  children: null,\r\n  tag: 'h2'\r\n}\r\n\r\nconst SectionHeader = ({\r\n  className,\r\n  data,\r\n  children,\r\n  tag,\r\n  ...props\r\n}) => {\r\n\r\n  const classes = classNames(\r\n    'section-header',\r\n    className\r\n  );\r\n\r\n  const Component = tag;\r\n\r\n  return (\r\n    <>\r\n      {(data.title || data.paragraph) &&\r\n        <div\r\n          {...props}\r\n          className={classes}\r\n        >\r\n          <div className=\"container-xs\">\r\n            {children}\r\n            {data.title &&\r\n              <Component className={\r\n                classNames(\r\n                  'mt-0',\r\n                  data.paragraph ? 'mb-16' : 'mb-0'\r\n                )}>{data.title}</Component>\r\n            }\r\n            {data.paragraph &&\r\n              <p className=\"m-0\">{data.paragraph}</p>\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nSectionHeader.propTypes = propTypes;\r\nSectionHeader.defaultProps = defaultProps;\r\n\r\nexport default SectionHeader;","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  src: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.string\r\n  ]).isRequired,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  alt: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n  src: undefined,\r\n  width: undefined,\r\n  height: undefined,\r\n  alt: undefined\r\n}\r\n\r\nconst Image = ({\r\n  className,\r\n  src,\r\n  width,\r\n  height,\r\n  alt,\r\n  ...props\r\n}) => {\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const image = useRef(null);\r\n\r\n  useEffect(() => {\r\n    handlePlaceholder(image.current);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  const placeholderSrc = (w, h) => {\r\n    return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${w} ${h}\"%3E%3C/svg%3E`;\r\n  }\r\n\r\n  const handlePlaceholder = (img) => {\r\n    const placeholder = document.createElement('img');\r\n    if (!loaded) {\r\n      img.style.display = 'none';\r\n      img.before(placeholder);\r\n      placeholder.src = placeholderSrc(\r\n        img.getAttribute('width') || 0,\r\n        img.getAttribute('height') || 0\r\n      );\r\n      placeholder.width = img.getAttribute('width');\r\n      placeholder.height = img.getAttribute('height');\r\n      placeholder.style.opacity = '0';\r\n      img.className && placeholder.classList.add(img.className);\r\n      placeholder.remove();\r\n      img.style.display = '';      \r\n    }\r\n  }\r\n\r\n  function onLoad() {\r\n    setLoaded(true);\r\n  }  \r\n\r\n  return (\r\n    <img\r\n      {...props}\r\n      ref={image}\r\n      className={className}\r\n      src={src}\r\n      width={width}\r\n      height={height}\r\n      alt={alt}\r\n      onLoad={onLoad} />\r\n  );\r\n}\r\n\r\nImage.propTypes = propTypes;\r\nImage.defaultProps = defaultProps;\r\n\r\nexport default Image;","export default __webpack_public_path__ + \"static/media/FModel_KFmi0mvuMU.a4d944e3.png\";","export default __webpack_public_path__ + \"static/media/FModel_XTEaiByU7L.f1d97d98.png\";","export default __webpack_public_path__ + \"static/media/FModel_j4w47k5EEj.ff467609.png\";","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SectionSplitProps } from '../../utils/SectionProps';\r\nimport SectionHeader from './partials/SectionHeader';\r\nimport Image from '../elements/Image';\r\nimport mainLayout from '../../assets/images/FModel_KFmi0mvuMU.png'\r\nimport audioPlayer from '../../assets/images/FModel_XTEaiByU7L.png'\r\nimport mapViewer from '../../assets/images/FModel_j4w47k5EEj.png'\r\n\r\nconst propTypes = {\r\n  ...SectionSplitProps.types\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionSplitProps.defaults\r\n}\r\n\r\nconst FeaturesSplit = ({\r\n  className,\r\n  topOuterDivider,\r\n  bottomOuterDivider,\r\n  topDivider,\r\n  bottomDivider,\r\n  hasBgColor,\r\n  invertColor,\r\n  invertMobile,\r\n  invertDesktop,\r\n  alignTop,\r\n  imageFill,\r\n  ...props\r\n}) => {\r\n\r\n  const outerClasses = classNames(\r\n    'features-split section',\r\n    topOuterDivider && 'has-top-divider',\r\n    bottomOuterDivider && 'has-bottom-divider',\r\n    hasBgColor && 'has-bg-color',\r\n    invertColor && 'invert-color',\r\n    className\r\n  );\r\n\r\n  const innerClasses = classNames(\r\n    'features-split-inner section-inner',\r\n    topDivider && 'has-top-divider',\r\n    bottomDivider && 'has-bottom-divider'\r\n  );\r\n\r\n  const splitClasses = classNames(\r\n    'split-wrap',\r\n    invertMobile && 'invert-mobile',\r\n    invertDesktop && 'invert-desktop',\r\n    alignTop && 'align-top'\r\n  );\r\n\r\n  const sectionHeader = {\r\n    title: 'UI / UX',\r\n    paragraph: 'Unlike a lot of other open-source software, a lot of work has been put into the user experience. We want it to be as easy to use as complete for the end-user.'\r\n  };\r\n\r\n  return (\r\n    <section {...props} className={outerClasses}>\r\n      <div className=\"container\">\r\n        <div className={innerClasses}>\r\n          <SectionHeader data={sectionHeader} className=\"center-content\" />\r\n          <div className={splitClasses}>\r\n\r\n            <div className=\"split-item\">\r\n              <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\r\n                <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                  Main Layout\r\n                </div>\r\n                <p className=\"m-0\">\r\n                  This is where everything happens. Loaded files, folders, assets, are contained in the left part. The middle part, the biggest one, is where the asset data will be displayed (as JSON). You can open up to 25 tabs simultaneously and use the search bar with <code>CTRL + F</code> to filter the data.\r\n                </p>\r\n              </div>\r\n              <div className={\r\n                classNames(\r\n                  'split-item-image center-content-mobile reveal-from-bottom',\r\n                  imageFill && 'split-item-image-fill'\r\n                )}\r\n                data-reveal-container=\".split-item\">\r\n                <Image src={mainLayout} alt=\"Main Layout\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"split-item\">\r\n              <div className=\"split-item-content center-content-mobile reveal-from-right\" data-reveal-container=\".split-item\">\r\n                <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                  Audio Player\r\n                </div>\r\n                <p className=\"m-0\">\r\n                  Nice and clean. It's a good way to listen to your favorite sound files. It has playlist support so if you extract another sound asset, its audio data will be added to the playlist. You can also add external sound files with <code>CTRL + N</code>.\r\n                </p>\r\n              </div>\r\n              <div className={\r\n                classNames(\r\n                  'split-item-image center-content-mobile reveal-from-bottom',\r\n                  imageFill && 'split-item-image-fill'\r\n                )}\r\n                data-reveal-container=\".split-item\">\r\n                <Image src={audioPlayer} alt=\"Audio Player\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"split-item\">\r\n              <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\r\n                <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                  Game Exclusive Features\r\n                </div>\r\n                <h3 className=\"mt-0 mb-12\">\r\n                  Fortnite Map Viewer\r\n                </h3>\r\n                <p className=\"m-0\">\r\n                  There are exclusive features for some games FModel support. For example, the Fortnite Map Viewer, which lets you draw a lot of information directly onto the map. This information is extracted from the files and automatically parsed to be understandable by a human.\r\n                </p>\r\n              </div>\r\n              <div className={\r\n                classNames(\r\n                  'split-item-image center-content-mobile reveal-from-bottom',\r\n                  imageFill && 'split-item-image-fill'\r\n                )}\r\n                data-reveal-container=\".split-item\">\r\n                <Image src={mapViewer} alt=\"Map Viewer\" />\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nFeaturesSplit.propTypes = propTypes;\r\nFeaturesSplit.defaultProps = defaultProps;\r\n\r\nexport default FeaturesSplit;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SectionTilesProps } from '../../utils/SectionProps';\r\nimport SectionHeader from './partials/SectionHeader';\r\n\r\nconst propTypes = {\r\n  ...SectionTilesProps.types\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionTilesProps.defaults\r\n}\r\n\r\nconst Testimonial = ({\r\n  className,\r\n  topOuterDivider,\r\n  bottomOuterDivider,\r\n  topDivider,\r\n  bottomDivider,\r\n  hasBgColor,\r\n  invertColor,\r\n  pushLeft,\r\n  ...props\r\n}) => {\r\n\r\n  const outerClasses = classNames(\r\n    'testimonial section',\r\n    topOuterDivider && 'has-top-divider',\r\n    bottomOuterDivider && 'has-bottom-divider',\r\n    hasBgColor && 'has-bg-color',\r\n    invertColor && 'invert-color',\r\n    className\r\n  );\r\n\r\n  const innerClasses = classNames(\r\n    'testimonial-inner section-inner',\r\n    topDivider && 'has-top-divider',\r\n    bottomDivider && 'has-bottom-divider'\r\n  );\r\n\r\n  const sectionHeader = {\r\n    title: 'A lot more features',\r\n    paragraph: 'FModel has a lot more feature to offer, makes sure to explore the software by yourself to find them.'\r\n  };\r\n\r\n  return (\r\n    <section {...props} className={outerClasses}>\r\n      <div className=\"container\">\r\n        <div className={innerClasses}>\r\n          <SectionHeader data={sectionHeader} className=\"center-content\" style={{ paddingBottom: '0px' }} />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nTestimonial.propTypes = propTypes;\r\nTestimonial.defaultProps = defaultProps;\r\n\r\nexport default Testimonial;","import React from 'react';\r\n// import sections\r\nimport Hero from '../components/sections/Hero';\r\nimport FeaturesSplit from '../components/sections/FeaturesSplit';\r\nimport Testimonial from '../components/sections/Testimonial';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <>\r\n      <Hero className=\"illustration-section-01\" />\r\n      <FeaturesSplit topDivider className=\"illustration-section-02\" />\r\n      <Testimonial topDivider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useRef, useEffect } from 'react';\r\nimport { useLocation, Switch } from 'react-router-dom';\r\nimport AppRoute from './utils/AppRoute';\r\nimport ScrollReveal from './utils/ScrollReveal';\r\nimport ReactGA from 'react-ga';\r\n\r\n// Layouts\r\nimport LayoutDefault from './layouts/LayoutDefault';\r\n\r\n// Views \r\nimport Home from './views/Home';\r\n\r\n// Initialize Google Analytics\r\nReactGA.initialize(process.env.REACT_APP_GA_CODE);\r\n\r\nconst trackPage = page => {\r\n  ReactGA.set({ page });\r\n  ReactGA.pageview(page);\r\n};\r\n\r\nconst App = () => {\r\n\r\n  const childRef = useRef();\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const page = location.pathname;\r\n    document.body.classList.add('is-loaded')\r\n    childRef.current.init();\r\n    trackPage(page);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location]);\r\n\r\n  return (\r\n    <ScrollReveal\r\n      ref={childRef}\r\n      children={() => (\r\n        <Switch>\r\n          <AppRoute exact path=\"/\" component={Home} layout={LayoutDefault} />\r\n        </Switch>\r\n      )} />\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//import './App.css';\r\nimport './assets/scss/style.scss';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}